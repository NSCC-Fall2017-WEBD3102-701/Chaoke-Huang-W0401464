
            <div class="row">
                <h:outputLabel styleClass="offset-3 col-2">Password</h:outputLabel>
                <h:inputSecret styleClass="col-3" value="#{user.password}" required="true"
                             id="password"
                             label="Password"
                             requiredMessage="Please enter the password which is more than four letters.">
                    <f:validateLength minimum="5" maximum="15"/>
                </h:inputSecret>
                <h:message for="password" styleClass="error"/>
            </div>
            <br></br>

            <div class="row">
                <h:outputLabel styleClass="offset-3 col-2">Confirm Password</h:outputLabel>
                <h:inputSecret styleClass="col-3"  required="true"
                               id="confirmpassword"
                               label="Confirm Password"
                               requiredMessage="Please enter the password which is more than four letters.">
                    <f:validateLength minimum="5" maximum="15"/>
                </h:inputSecret>
                <h:message for="confirmpassword" styleClass="error"/>
            </div>

<dependency>
	<groupId>org.primefaces</groupId>
	<artifactId>primefaces</artifactId>
	<version>6.1</version>
</dependency>
















        try {

            HttpServletRequest reqt = (HttpServletRequest) servletRequest;
            // HttpServletResponse resp = (HttpServletResponse) servletResponse;
            HttpSession ses = reqt.getSession(false);
            UserService userService = (ses != null) ? (UserService) ses.getAttribute("userService") : null;


            String reqURI = reqt.getRequestURI();
            if (reqURI.contains(".css") || reqURI.contains(".js"))
                logger.log(Level.WARNING, reqURI+" This is resource URI ");
            else {
                logger.log(Level.INFO, reqURI+" This is not resource URI ");
            }
            filterChain.doFilter(servletRequest, servletResponse);

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
























        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
                "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
        <html xmlns="http://www.w3.org/1999/xhtml"
              xmlns:h="http://xmlns.jcp.org/jsf/html"
              xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
        >

        <ui:composition template="layout.xhtml">
            <ui:define name="myHead">
                <h:outputStylesheet name="css/all.css"/>
            </ui:define>

            <ui:define name="heading">Sleeping Well</ui:define>

            <ui:define name="secondPart">
                <h5 style="color: #005cbf"><h:outputLabel value="#{flash['feedback']}"/></h5>
            </ui:define>

            <ui:define name="content">
                <h:form>
                    <ui:repeat value="#{userService.getAllUsers()}" var="u">
                        <hr></hr>
                        <div class="row">
                            <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5">
                                <h4>First Name: #{u.first_name} Last Name: #{u.last_name}</h4>
                                <h4>User Name: #{u.user_name}</h4>
                            </div>
                            <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2">
                                <h:commandButton action="#" value="Delete"
                                                 styleClass="btn btn-info"></h:commandButton>
                            </div>
                        </div>
                    </ui:repeat>
                </h:form>
            </ui:define>
        </ui:composition>
        </html>























        package org.primefaces.examples;

        import javax.annotation.PostConstruct;
        import java.io.Serializable;
        import javax.faces.bean.ManagedBean;
        import org.primefaces.model.chart.PieChartModel;

        @ManagedBean
        public class ChartView implements Serializable {

            private PieChartModel pieModel1;
            private PieChartModel pieModel2;

            @PostConstruct
            public void init() {
                createPieModels();
            }

            public PieChartModel getPieModel1() {
                return pieModel1;
            }

            public PieChartModel getPieModel2() {
                return pieModel2;
            }

            private void createPieModels() {
                createPieModel1();
                createPieModel2();
            }

            private void createPieModel1() {
                pieModel1 = new PieChartModel();

                pieModel1.set("Brand 1", 540);
                pieModel1.set("Brand 2", 325);
                pieModel1.set("Brand 3", 702);
                pieModel1.set("Brand 4", 421);

                pieModel1.setTitle("Simple Pie");
                pieModel1.setLegendPosition("w");
            }

            private void createPieModel2() {
                pieModel2 = new PieChartModel();

                pieModel2.set("Brand 1", 540);
                pieModel2.set("Brand 2", 325);
                pieModel2.set("Brand 3", 702);
                pieModel2.set("Brand 4", 421);

                pieModel2.setTitle("Custom Pie");
                pieModel2.setLegendPosition("e");
                pieModel2.setFill(false);
                pieModel2.setShowDataLabels(true);
                pieModel2.setDiameter(150);
            }

        }